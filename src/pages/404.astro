---
import WizardHead from "@components/WizardHead.astro";
import { Image } from "astro:assets";
// Use Astro.glob to get all images in the assets/404 directory
const imagePaths = await Astro.glob("../assets/404/*.{jpg,jpeg,png,webp,gif}");
console.log(imagePaths);
---

<html lang="en">
  <head>
    <WizardHead
      title="Page Not Found"
      description="Page Not Found"
      thumbnail="/src/assets/404.png"
    />
    <style>
      .background {
        background-color: #e0e0e0; /* A subtle contrasting background color */
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        overflow: hidden; /* Prevent overflow during image rotation */
      }
      .background {
        background-color: #e0e0e0; /* A subtle contrasting background color */
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        overflow: hidden; /* Prevent overflow during image rotation */
      }
      .image-container {
        position: relative;
        width: 100%;
        height: 100vh; /* Adjust the height as needed */
        perspective: 1000px; /* Depth effect for the 3D transform */
      }
      .image-3d {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 80%; /* Adjust the size as needed */
        height: auto;
        transform: translate(-50%, -50%) rotateY(20deg) rotateX(10deg); /* Center and initial 3D rotation */
        transform-style: preserve-3d;
        backface-visibility: hidden;
        transition:
          transform 1s cubic-bezier(0.77, 0, 0.175, 1),
          opacity 1s ease-in-out,
          box-shadow 1s ease-in-out; /* Smooth transitions for image change, 3D rotation, and box-shadow */
        opacity: 0; /* Hide all images initially */
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Add a drop shadow effect */
      }
      .image-3d.active {
        opacity: 1; /* Show active image */
      }
      /* Hover effect for the image container */
      .image-container:hover .image-3d.active {
        transform: translate(-50%, -50%) rotateY(25deg) rotateX(15deg); /* Increased rotation on hover */
        box-shadow: 0 0 40px rgba(0, 0, 0, 0.7); /* Increase shadow size on hover */
      }

      .cta {
        position: absolute;
        top: 10%;
        left: 50%;
        transform: translate(-50%, -10%) rotateX(-20deg) rotateY(5deg);
        background: rgba(255, 255, 255, 0.85);
        padding: 2rem;
        border-radius: 1rem;
        max-width: 600px;
        box-sizing: border-box;
        z-index: 10;
        box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.3);
      }

      .btn {
        text-decoration: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        transition: background-color 0.3s ease;
      }

      .btn:hover {
        background: #0056a3;
      }
    </style>
  </head>
  <body>
    <div class="background">
      <div class="image-container" id="image-container">
        <!-- Render images and hide them initially -->
        {
          imagePaths.map((image, index) => (
            <Image
              src={image.default.src}
              alt="Page Not Found"
              class={`image-3d ${index === 0 ? "active" : ""}`}
            />
          ))
        }
      </div>
      <div class="cta">
        <h1>Oops! Page Not Found.</h1>
        <p>
          The page you are looking for might have been removed, had its name
          changed, or is temporarily unavailable.
        </p>
        <a href="/" class="btn">Go to Homepage</a>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var images = document.querySelectorAll(".image-3d");
        var currentIndex = 0;

        function nextBackgroundImage() {
          // Remove 'active' class from current image
          images[currentIndex].classList.remove("active");

          // Move to the next image
          currentIndex = (currentIndex + 1) % images.length;

          // Add 'active' class to new current image
          images[currentIndex].classList.add("active");
        }

        // Change image every 5000 milliseconds (5 seconds)
        setInterval(nextBackgroundImage, 5000);
      });
    </script>
  </body>
</html>
